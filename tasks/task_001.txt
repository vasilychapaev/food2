# Task ID: 1
# Title: Setup Docker Environment
# Status: done
# Dependencies: None
# Priority: high
# Description: Create Docker Compose configuration for Laravel and MongoDB services
# Details:
Create a docker-compose.yml file with the following services:
1. Laravel service using PHP 8.x image
2. MongoDB service
3. Configure appropriate volumes for persistence
4. Set up networking between services
5. Configure Laravel to run with artisan serve

Example docker-compose.yml structure:
```yaml
version: '3'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-app
    restart: unless-stopped
    volumes:
      - ./:/var/www
    ports:
      - "8000:8000"
    command: php artisan serve --host=0.0.0.0
    depends_on:
      - mongo

  mongo:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

volumes:
  mongo-data:
```

# Test Strategy:
Verify Docker Compose setup by running 'docker-compose up' and ensuring both Laravel and MongoDB services start correctly. Test connectivity between services by accessing Laravel application and verifying it can connect to MongoDB.
